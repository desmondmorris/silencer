// Generated by CoffeeScript 1.5.0
(function() {

  $(function() {
    var detectSite, filterFacebook, filterTwitter, genericFilter, getTerms, hideChild, injectJquery, sendUserInfo;
    injectJquery = function() {
      var body, script;
      script = document.createElement("script");
      script.type = "text/javascript";
      script.src = "/lib/jquery-1.9.1.min.js";
      body = document.getElementsByTagName("body")[0];
      return body.appendChild(script);
    };
    sendUserInfo = function() {
      if (localStorage['silencerAuth']) {
        return chrome.runtime.sendMessage({
          userInfo: true,
          user: localStorage['silencerAuth']
        });
      }
    };
    detectSite = function() {
      if (document.URL.indexOf('facebook') > -1) {
        injectJquery();
        filterFacebook();
        setInterval(filterFacebook, 2500);
      }
      if (document.URL.indexOf('twitter') > -1) {
        filterTwitter();
        setInterval(filterTwitter, 2500);
      }
      if (document.URL.indexOf("localhost:3001/auth") > -1) {
        setInterval(sendUserInfo, 1500);
      }
      if (document.URL.indexOf("silencer.io/auth") > -1) {
        return setInterval(sendUserInfo, 1500);
      }
    };
    getTerms = function(callback) {
      debugger;      chrome.runtime.sendMessage({
        contentScriptMutesRequest: true
      });
      return chrome.extension.onMessage.addListener(function(message, sender) {
        if (message.user) {
          return callback(message.user.mutes);
        }
      });
    };
    hideChild = function(child) {
      return child.slideUp();
    };
    genericFilter = function(parentDiv) {
      return getTerms(function(terms) {
        var child, children, parent, term, _i, _len, _results;
        parent = parentDiv;
        children = parentDiv.children();
        console.log(terms);
        _results = [];
        for (_i = 0, _len = children.length; _i < _len; _i++) {
          child = children[_i];
          _results.push((function() {
            var _j, _len1, _results1;
            _results1 = [];
            for (_j = 0, _len1 = terms.length; _j < _len1; _j++) {
              term = terms[_j];
              if ($(child).is(":visible")) {
                if ($($(child)).text().toLowerCase().indexOf(term) > -1) {
                  hideChild($(child));
                  _results1.push(chrome.runtime.sendMessage({
                    termSlidUp: "" + term,
                    site: "twitter"
                  }));
                } else {
                  _results1.push(void 0);
                }
              } else {
                _results1.push(void 0);
              }
            }
            return _results1;
          })());
        }
        return _results;
      });
    };
    filterTwitter = function() {
      if ($(".route-home").length || document.URL.indexOf("twitter.com/search") > -1 || $('.list-stream').length) {
        return genericFilter($('.stream-items'));
      }
    };
    filterFacebook = function() {
      return getTerms(function(terms) {
        var child, children, stream, term, _i, _len, _results;
        stream = $(".uiStream");
        children = $(stream).children(".genericStreamStory");
        _results = [];
        for (_i = 0, _len = children.length; _i < _len; _i++) {
          child = children[_i];
          _results.push((function() {
            var _j, _len1, _results1;
            _results1 = [];
            for (_j = 0, _len1 = terms.length; _j < _len1; _j++) {
              term = terms[_j];
              if ($(child).is(":visible")) {
                if ($(child).text().toLowerCase().indexOf(term.toLowerCase()) > -1) {
                  hideChild($(child));
                  _results1.push(chrome.runtime.sendMessage({
                    termSlidUp: "" + term,
                    site: "facebook"
                  }));
                } else {
                  _results1.push(void 0);
                }
              } else {
                _results1.push(void 0);
              }
            }
            return _results1;
          })());
        }
        return _results;
      });
    };
    return detectSite();
  });

}).call(this);
